{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentPrefix": {
            "type": "string",
            "maxLength": 10,
            "metadata": {
                "displayName": "Deployment prefix",
                "description": "Provide a prefix (max 10 characters, unique at tenant-scope) for subscription resources created as part of this deploy."
            },
            "defaultValue": "cafsecure"
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "displayName": "Log Analytics workspace id"
            }
        },
        "enableLogs": {
            "type": "String",
            "metadata": {
                "displayName": "Enable logs",
                "description": "If 'Yes', ARM will enable logs stream to the log analytics workspace. If 'No', they will be disabled"
            },
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "hubNetworkId": {
            "type": "string",
            "metadata": {
                "displayName": "Virtual network id for the hub that the spoke will use"
            }
        },
        "azFirewallId": {
            "type": "string",
            "metadata": {
                "displayName": "Azure Firewall id that the spoke will use"
            }
        },
        "addressPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "IP address prefix for the spoke network"
            },
            "defaultValue": "10.1.0.0/16"
        },
        "subnetAddressPrefixForWorkload": {
            "type": "string",
            "metadata": {
                "displayName": "Subnet prefix for the workload"
            },
            "defaultValue": "10.1.2.0/24"
        },
        "DdoSId": {
            "type": "string",
            "metadata": {
                "displayName": "DDoS Id",
                "description": "The DDoS Standard protection plan information id to use with the hub spoke."
            },
            "defaultValue": ""
        },
        "deployAppGw": {
            "type": "String",
            "metadata": {
                "displayName": "Deploy application gateway in this spoke",
                "description": "If 'Yes', ARM will deploy an application gateway in this spoke. If 'No', it will be skipped"
            },
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "subnetAddressPrefixForAppGw": {
            "type": "string",
            "metadata": {
                "displayName": "Subnet prefix for the application gateway"
            },
            "defaultValue": "10.1.1.0/24"
        },
        "appGwZones": {
            "type": "array",
            "metadata": {
                "displayName": "Availability Zones for the Azure Application Gateway"
            },
            "defaultValue": []
        }
    },
    "variables": {
        "resourceGroupName": "[concat('rg-', parameters('deploymentPrefix'), '-networking-spokes')]",
        "nameSuffix": "[replace(split(parameters('addressPrefix'), '/')[0],'.', '_')]",
        "spokeName": "[concat(parameters('deploymentPrefix'), '-spoke-', variables('nameSuffix'))]",
        "deploymentName": "[concat('deploy-', variables('spokeName'))]",
        "deploymentId": "[concat(subscription().id, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Resources/deployments/', variables('deploymentName'))]",
        "deploymentNamePeering": "[concat(variables('deploymentName'), '-peering-', substring(uniqueString(subscription().id),0,6))]"
    },
    "resources": [
        // Creates the resource group
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[deployment().location]",
            "name": "[variables('resourceGroupName')]",
            "properties": {}
        },

        // Deploys spoke vnet and peer to hub
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[variables('deploymentName')]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups/', variables('resourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "workspaceId": {
                            "type": "string"
                        },
                        "enableLogs": {
                            "type": "bool"
                        },
                        "hubNetworkId": {
                            "type": "string"
                        },
                        "azFirewallId": {
                            "type": "string"
                        },
                        "spokeName": {
                            "type": "string"
                        },
                        "addressPrefix": {
                            "type": "string"
                        },
                        "subnetAddressPrefixForWorkload": {
                            "type": "string"
                        },
                        "DdoSId": {
                            "type": "string"
                        },
                        "deployAppGw": {
                            "type": "bool"
                        },
                        "subnetAddressPrefixForAppGw": {
                            "type": "string"
                        },
                        "appGwZones": {
                            "type": "array"
                        }
                    },
                    "variables": {
                        "networkName": "[concat('vnet-', parameters('spokeName'))]",
                        "networkSecurityGroupName": "[concat('nsg-', parameters('spokeName'))]",
                        "appGwSubnetName": "[concat('snet-', parameters('spokeName'), '-appgw')]",
                        "appGwNsgName": "[concat('nsg-', parameters('spokeName'), '-appgw')]",
                        "hubName": "[split(parameters('hubNetworkId'),'/')[8]]",
                        "azFwRouteName": "udr-nexthop-to-fw",
                        "appGwName": "[concat('appgw-', parameters('spokeName'))]",
                        "appGwIpName": "[concat(variables('appGwName'), '-pip')]",
                        // Creating variable that later will be used in conjunction with the union() function to cater for conditional subnet creation while ensuring idempotency
                        "appGwSubnet": [
                            {
                                "name": "[variables('appGwSubnetName')]",
                                "properties": {
                                    "addressPrefix": "[parameters('subnetAddressPrefixForAppGw')]",
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appGwNsgName'))]"
                                    }
                                }
                            }
                        ],
                        "workloadSubnet": [
                            {
                                "name": "[concat('snet-', parameters('spokeName'), '-workload')]",
                                "properties": {
                                    "addressPrefix": "[parameters('subnetAddressPrefixForWorkload')]",
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                                    },
                                    "routeTable": {
                                        "id": "[resourceId('Microsoft.Network/routeTables', variables('azFwRouteName'))]"
                                    }
                                }
                            }
                        ]
                    },
                    "resources": [
                        // Empty Network Security Group
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('networkSecurityGroupName')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                            }
                        },

                        // Network Security Group for AppGw
                        {
                            "condition": "[parameters('deployAppGw')]",
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('appGwNsgName')]",
                            "location": "[resourceGroup().location]",
                            "comments": "NSG on the App Gateway subnet.",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "Allow80InBound",
                                        "properties": {
                                            "description": "Allow ALL web traffic into 80. (If you wanted to allow-list specific IPs, this is where you'd list them.)",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "sourceAddressPrefix": "Internet",
                                            "destinationPortRange": "80",
                                            "destinationAddressPrefix": "VirtualNetwork",
                                            "access": "Allow",
                                            "priority": 100,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowControlPlaneInBound",
                                        "properties": {
                                            "description": "Allow Azure Control Plane in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationPortRange": "65200-65535",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 110,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowHealthProbesInBound",
                                        "properties": {
                                            "description": "Allow Azure Health Probes in. (https://docs.microsoft.com/azure/application-gateway/configuration-infrastructure#network-security-groups)",
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "sourceAddressPrefix": "AzureLoadBalancer",
                                            "destinationPortRange": "*",
                                            "destinationAddressPrefix": "VirtualNetwork",
                                            "access": "Allow",
                                            "priority": 120,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "DenyAllInBound",
                                        "properties": {
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationPortRange": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Deny",
                                            "priority": 1000,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowAllOutBound",
                                        "properties": {
                                            "protocol": "*",
                                            "sourcePortRange": "*",
                                            "sourceAddressPrefix": "*",
                                            "destinationPortRange": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 1000,
                                            "direction": "Outbound"
                                        }
                                    }
                                ]
                            }
                        },

                        // Route/force tunnel from spokes to Azure firewall
                        {
                            "type": "Microsoft.Network/routeTables",
                            "name": "[variables('azFwRouteName')]",
                            "apiVersion": "2020-08-01",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "disableBgpRoutePropagation": false,
                                "routes": [
                                    {
                                        "name": "AzureFirewallRoute",
                                        "properties": {
                                            "addressPrefix": "0.0.0.0/0",
                                            "nextHopType": "VirtualAppliance",
                                            "nextHopIpAddress": "[reference(parameters('azFirewallId'), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
                                        }
                                    }
                                ]
                            }
                        },
                        // Spoke network
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('networkName')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appGwNsgName'))]",
                                "[resourceId('Microsoft.Network/routeTables', variables('azFwRouteName'))]"
                            ],
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('addressPrefix')]"
                                    ]
                                },
                                "subnets": "[union(if(parameters('deployAppGw'), variables('appGwSubnet'), json('[]')), variables('workloadSubnet'))]",
                                "enableDdosProtection": "[not(empty(parameters('DdoSId')))]",
                                "ddosProtectionPlan": {
                                    "id": "[if(empty(parameters('DdoSId')), json('null'), parameters('DdoSId'))]"
                                }
                            }
                        },
                        // Virtual network peering spoke to hub
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2020-05-01",
                            "name": "[concat(variables('networkName'), '/peer-to-', variables('hubName'))]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
                            ],
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[parameters('hubNetworkId')]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": false,
                                "useRemoteGateways": false
                            }
                        },

                        // Application Gateway Public IP
                        {
                            "condition": "[parameters('deployAppGw')]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('appGwIpName')]",
                            "location": "[resourceGroup().location]",
                            "sku": {
                                "name": "Standard"
                            },
                            "properties": {
                                "publicIPAllocationMethod": "Static"
                            }
                        },
                        // Application Gateway
                        {
                            "condition": "[parameters('deployAppGw')]",
                            "type": "Microsoft.Network/applicationGateways",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('appGwName')]",
                            "location": "[resourceGroup().location]",
                            "zones": "[if(not(empty(parameters('appGwZones'))), parameters('appGwZones'), json('null'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwIpName'))]"
                            ],
                            "properties": {
                                "sku": {
                                    "name": "WAF_v2",
                                    "tier": "WAF_v2"
                                },
                                "gatewayIPConfigurations": [
                                    {
                                        "name": "appGatewayIpConfig",
                                        "properties": {
                                            "subnet": {
                                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), variables('appGwSubnetName'))]"
                                            }
                                        }
                                    }
                                ],
                                "frontendIPConfigurations": [
                                    {
                                        "name": "appGwPublicFrontendIp",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "publicIPAddress": {
                                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwIpName'))]"
                                            }
                                        }
                                    }
                                ],
                                "frontendPorts": [
                                    {
                                        "name": "port_80",
                                        "properties": {
                                            "port": 80
                                        }
                                    }
                                ],
                                "backendAddressPools": [
                                    {
                                        "name": "backend-default"
                                    }
                                ],
                                "backendHttpSettingsCollection": [
                                    {
                                        "name": "http-setting-default",
                                        "properties": {
                                            "port": 80,
                                            "protocol": "Http",
                                            "cookieBasedAffinity": "Disabled",
                                            "pickHostNameFromBackendAddress": false,
                                            "requestTimeout": 20
                                        }
                                    }
                                ],
                                "httpListeners": [
                                    {
                                        "name": "http-listener-default",
                                        "properties": {
                                            "frontendIPConfiguration": {
                                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGwName'), 'appGwPublicFrontendIp')]"
                                            },
                                            "frontendPort": {
                                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGwName'), 'port_80')]"
                                            },
                                            "protocol": "Http",
                                            "requireServerNameIndication": false
                                        }
                                    }
                                ],
                                "requestRoutingRules": [
                                    {
                                        "name": "http-rule",
                                        "properties": {
                                            "ruleType": "Basic",
                                            "httpListener": {
                                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGwName'), 'http-listener-default')]"
                                            },
                                            "backendAddressPool": {
                                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGwName'), 'backend-default')]"
                                            },
                                            "backendHttpSettings": {
                                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGwName'), 'http-setting-default')]"
                                            }
                                        }
                                    }
                                ],
                                "enableHttp2": false,
                                "autoscaleConfiguration": {
                                    "minCapacity": 0,
                                    "maxCapacity": 5
                                },
                                "webApplicationFirewallConfiguration": {
                                    "enabled": true,
                                    "firewallMode": "Prevention",
                                    "ruleSetType": "OWASP",
                                    "ruleSetVersion": "3.2"
                                }
                            }
                        },
                        {
                            "condition": "[parameters('deployAppGw')]",
                            "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[concat(variables('appGwName'), '/Microsoft.Insights/default')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/applicationGateways', variables('appGwName'))]"
                            ],
                            "properties": {
                                "workspaceId": "[parameters('workspaceId')]",
                                "logs": [
                                    {
                                        "category": "ApplicationGatewayAccessLog",
                                        "enabled": "[parameters('enableLogs')]"
                                    },
                                    {
                                        "category": "ApplicationGatewayPerformanceLog",
                                        "enabled": "[parameters('enableLogs')]"
                                    },
                                    {
                                        "category": "ApplicationGatewayFirewallLog",
                                        "enabled": "[parameters('enableLogs')]"
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {
                        "networkId": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
                        },
                        "appGwId": {
                            "condition": "[parameters('deployAppGw')]",
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/applicationGateways', variables('appGwName'))]"
                        }
                    }
                },
                "parameters": {
                    "workspaceId": {
                        "value": "[parameters('workspaceId')]"
                    },
                    "enableLogs": {
                        "value": "[equals(parameters('enableLogs'), 'Yes')]"
                    },
                    "hubNetworkId": {
                        "value": "[parameters('hubNetworkId')]"
                    },
                    "azFirewallId": {
                        "value": "[parameters('azFirewallId')]"
                    },
                    "spokeName": {
                        "value": "[variables('spokeName')]"
                    },
                    "addressPrefix": {
                        "value": "[parameters('addressPrefix')]"
                    },
                    "subnetAddressPrefixForWorkload": {
                        "value": "[parameters('subnetAddressPrefixForWorkload')]"
                    },
                    "DdoSId": {
                        "value": "[parameters('DdoSId')]"
                    },
                    "deployAppGw": {
                        "value": "[equals(parameters('deployAppGw'), 'Yes')]"
                    },
                    "subnetAddressPrefixForAppGw": {
                        "value": "[parameters('subnetAddressPrefixForAppGw')]"
                    },
                    "appGwZones": {
                        "value": "[parameters('appGwZones')]"
                    }
                }
            }
        },

        // Peering hub to spoke
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "[variables('deploymentNamePeering')]",
            "resourceGroup": "[split(parameters('hubNetworkId'),'/')[4]]",
            "dependsOn": [
                "[variables('deploymentId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "hubName": {
                            "type": "string"
                        },
                        "spokeNetworkId": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "vnetPeerName": "[last(split(parameters('spokeNetworkId'),'/'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2020-05-01",
                            "name": "[concat(parameters('hubName'), '/peer-to-', variables('vnetPeerName'))]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "allowGatewayTransit": true,
                                "useRemoteGateways": false,
                                "remoteVirtualNetwork": {
                                    "id": "[parameters('spokeNetworkId')]"
                                }
                            }
                        }
                    ]
                },
                "parameters": {
                    "spokeNetworkId": {
                        "value": "[reference(variables('deploymentName')).outputs.networkId.value]"
                    },
                    "hubName": {
                        "value": "[split(parameters('hubNetworkId'),'/')[8]]"
                    }
                }

            }
        }
    ],
    "outputs": {
        "networkId": {
            "type": "string",
            "value": "[reference(variables('deploymentName')).outputs.networkId.value]"
        },
        "appGwId": {
            "condition": "[equals(parameters('deployAppGw'), 'Yes')]",
            "type": "string",
            "value": "[reference(variables('deploymentName')).outputs.appGwId.value]"
        }
    }
}
